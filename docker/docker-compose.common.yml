version: '3.8'

services:
  merci-postgres:
    container_name: merci-postgres
    build:
      context: ..
      dockerfile: docker/postgres/postgres.Dockerfile
    environment:
      POSTGRES_DB: merci
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      SLACK_APP_POSTGRES_USERNAME: merci_app
      SLACK_APP_POSTGRES_PASSWORD: merci_app
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 3s
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    networks:
      - wwf_network

  merci-bot:
    container_name: merci-bot
    build:
      context: ..
      dockerfile: docker/bot/bot.Dockerfile
    depends_on:
      merci-postgres:
        condition: service_healthy
        restart: true
    environment:
      THANK_YOU_DAO: ${THANK_YOU_DAO}
      POSTGRES_HOST: merci-postgres
      POSTGRES_DB: merci
      SLACK_APP_POSTGRES_USERNAME: merci_app
      SLACK_APP_POSTGRES_PASSWORD: merci_app
      SLACK_BOT_TOKEN: ${SLACK_BOT_TOKEN}
      SLACK_APP_TOKEN: ${SLACK_APP_TOKEN}
    restart: always
    networks:
      - wwf_network

  pgadmin:
    container_name: merci-pgadmin
    depends_on:
      - merci-postgres
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: test@gmail.com
      PGADMIN_DEFAULT_PASSWORD: postgres
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5433:80"
    networks:
      - wwf_network


networks:
  wwf_network:
    name: wwf_network
    driver: bridge
    external: true
