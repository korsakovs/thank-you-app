version: '3.8'

name: merci-slack-app

services:
  merci-postgres:
    container_name: merci-postgres
    image: merci-postgres
    build:
      context: ..
      dockerfile: docker/postgres/postgres.Dockerfile
    environment:
      POSTGRES_DB: merci
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      SLACK_APP_POSTGRES_USERNAME: merci_app
      SLACK_APP_POSTGRES_PASSWORD: merci_app
      PGDATA: /var/lib/postgresql/data/pgdata
      MERCI_ENV: ${MERCI_ENV:-unknown}
    # ports:
    #   - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 3s
    labels:
      logging: "promtail"
      logging_jobname: "merci-postgres"
      logging_env: ${MERCI_ENV:-unknown}
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    networks:
      - wwf_network

  merci-bot:
    container_name: merci-bot
    image: merci-bot
    build:
      context: ..
      dockerfile: docker/bot/dev.Dockerfile
    depends_on:
      merci-postgres:
        condition: service_healthy
        restart: true
    environment:
      THANK_YOU_DAO: POSTGRES
      POSTGRES_HOST: merci-postgres
      POSTGRES_DB: merci
      SLACK_APP_POSTGRES_USERNAME: merci_app
      SLACK_APP_POSTGRES_PASSWORD: merci_app
      SLACK_BOT_TOKEN: ${SLACK_BOT_TOKEN}
      SLACK_APP_TOKEN: ${SLACK_APP_TOKEN}
      DATABASE_ENCRYPTION_SECRET_KEY: ${DATABASE_ENCRYPTION_SECRET_KEY}
      MERCI_ENV: ${MERCI_ENV:-unknown}
      PROMETHEUS_MULTIPROC_DIR: /multiprocprometheus
    labels:
      logging: "promtail"
      logging_jobname: "merci-bot"
      logging_env: ${MERCI_ENV:-unknown}
    restart: always
    networks:
      - wwf_network
    volumes:
      - "merci_bot_volume:/nginx_sockets"

  merci-pgadmin:
    container_name: merci-pgadmin
    depends_on:
      - merci-postgres
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: test@gmail.com
      PGADMIN_DEFAULT_PASSWORD: postgres
      PGADMIN_CONFIG_SERVER_MODE: "False"
      MERCI_ENV: ${MERCI_ENV:-unknown}
    # ports:
    #   - "5433:80"
    labels:
      logging: "promtail"
      logging_jobname: "merci-pgadmin"
      logging_env: ${MERCI_ENV:-unknown}
    networks:
      - wwf_network

  merci-webapp:
    container_name: merci-webapp
    image: merci-webapp
    build:
      context: ..
      dockerfile: docker/webapp/dev.Dockerfile
    depends_on:
      merci-postgres:
        condition: service_healthy
        restart: true
    environment:
      THANK_YOU_DAO: POSTGRES
      POSTGRES_HOST: merci-postgres
      POSTGRES_DB: merci
      DATABASE_ENCRYPTION_SECRET_KEY: ${DATABASE_ENCRYPTION_SECRET_KEY}
      MERCI_ENV: ${MERCI_ENV:-unknown}
    labels:
      logging: "promtail"
      logging_jobname: "merci-webapp"
      logging_env: ${MERCI_ENV:-unknown}
    restart: always
    networks:
      - wwf_network
    volumes:
      - "merci_bot_volume:/nginx_sockets"

volumes:
  merci_bot_volume:

networks:
  wwf_network:
    name: wwf_network
    driver: bridge
    external: true
